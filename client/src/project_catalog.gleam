import gleam/list
import gleam/option.{type Option, None, Some}
import gleam/string

pub type ProjectInfo {
  ProjectInfo(
    name: String,
    emoji: String,
    description: String,
    status: String,
    path: String,
    features: List(String),
    tech_stack: List(String),
    domain: String,
    source_url: Option(String),
    screenshots: List(String),
  )
}

// Helper function to generate GitHub URLs
fn github_url(project_name: String) -> String {
  "https://github.com/instancer-kirik/" <> string.lowercase(project_name)
}

pub fn get_domains() -> List(#(String, String)) {
  [
    #(
      "Development Tools & Environments",
      "Powerful tools and environments for developers",
    ),
    #(
      "Creative Tools",
      "Tools for creative workflows, multimedia, and content creation",
    ),
    #("Project Management", "Tools for managing projects, time, and resources"),
    #("Data & Search", "Tools for data management, search, and organization"),
    #("System Tools", "System utilities and infrastructure tools"),
    #("Language Tools", "Programming language tools and environments"),
    #("Gaming & Entertainment", "Games and entertainment software"),
    #("Business & Contracts", "Business operations and contract management"),
  ]
}

pub fn get_projects() -> List(ProjectInfo) {
  [
    // Development Tools & Environments
    ProjectInfo(
      name: "Sledge",
      emoji: "üåê",
      description: "A modern web browser built with a hammer",
      status: "Active",
      path: "/sledge",
      features: [
        "made by developer, for developer",
        "Privacy-focused architecture with sandboxing",
        "QWebEngine - (Qt WebEngine) - Chromium",
        "Supports V3 extensions and Manifest V2 new handling",
        "Group-based, memory-state fantastic tab management",
        "Anti-fffffflashbang, force dark mode",
        "Desktop first; possible mobile, since qt supports it",
      ],
      tech_stack: ["pyqt6"],
      domain: "Development Tools & Environments",
      source_url: Some(github_url("sledge")),
      screenshots: [],
    ),
    ProjectInfo(
      name: "D.d",
      emoji: "üñ•Ô∏è",
      description: "A 3d tiling window manager for developers",
      status: "Active",
      path: "/ddew",
      features: [
        "Hardware integration basis for Hunter Exam software",
        "Custom tiling window manager", "Gesture and keyboard-driven controls",
      ],
      tech_stack: ["D", "dlangui with modular backends"],
      domain: "Development Tools & Environments",
      source_url: Some(github_url("ddew")),
      screenshots: [],
    ),
    ProjectInfo(
      name: "Shiny",
      emoji: "‚ú®",
      description: "Modern development environment with tooling and extensible architecture",
      status: "Active",
      path: "/shiny",
      features: [
        "Integrated debugging with time-travel", "AI-powered code completion",
        "Git integration with visual diff", "Smart package management",
        "Incremental build system", "Property-based testing framework",
        "Auto-generated documentation", "Plugin system with marketplace",
      ],
      tech_stack: ["Gleam, js, Erlang, D.d"],
      domain: "Development Tools & Environments",
      source_url: Some(github_url("shiny")),
      screenshots: [],
    ),
    ProjectInfo(
      name: "BigLinks",
      emoji: "üîó",
      description: "Symbolic links manager",
      status: "Active",
      path: "/biglinks",
      features: [
        "Visual symlink management", "Path visualization", "Link validation",
      ],
      tech_stack: ["pyqt"],
      domain: "Development Tools & Environments",
      source_url: Some(github_url("biglinks")),
      screenshots: [],
    ),
    ProjectInfo(
      name: "Compyutinator Code",
      emoji: "üíª",
      description: "CompSci and AI workspace and project/spaceship dashboards",
      status: "Active",
      path: "/compyutinator",
      features: [
        "AI workspace integration", "Project dashboards", "Spaceship interface",
      ],
      tech_stack: ["pyqt"],
      domain: "Development Tools & Environments",
      source_url: Some(github_url("compyutinator")),
      screenshots: [],
    ),
    ProjectInfo(
      name: "Explorinator",
      emoji: "üîç",
      description: "Sort by last modified (slow)",
      status: "Active",
      path: "/explorinator",
      features: [
        "VSCode extension", "Sort by modified time", "Performance improvements",
      ],
      tech_stack: ["C#"],
      domain: "Development Tools & Environments",
      source_url: Some(github_url("explorinator")),
      screenshots: [],
    ),
    // Gaming & Entertainment
    ProjectInfo(
      name: "Space Captain Operations Software",
      emoji: "üöÄ",
      description: "Platform (game) and various tools for managing spacecrafts, cargo, crew and asteroid mining",
      status: "Active",
      path: "/spaceos",
      features: [
        "3D Bridge Command for various functions",
        "Command & control system inspired by starship captain interfaces, providing strategic oversight and decision support during the Hunter exam.",
        "Advanced crew management", "Real-time space combat",
        "Complex trading mechanics", "Procedural mission system",
        "Cross-platform multiplayer",
      ],
      tech_stack: [
        "D", "Custom game framework", "zig?", "E", "gleam", "Custom networking",
        "Physics simulation", "AI systems",
      ],
      domain: "Gaming & Entertainment",
      source_url: Some(github_url("spaceos")),
      screenshots: [],
    ),
    ProjectInfo(
      name: "Pause || Effect",
      emoji: "üéÆ",
      description: "Dynamic multiplayer quests, maps, stats",
      status: "Shelved",
      path: "/pause-effect",
      features: ["Dynamic quests", "Multiplayer maps", "Stats tracking"],
      tech_stack: ["Elixir"],
      domain: "Gaming & Entertainment",
      source_url: Some(github_url("pause-effect")),
      screenshots: [],
    ),
    // Creative Tools
    ProjectInfo(
      name: "Bonify",
      emoji: "üöÇ",
      description: "rigging a train or arrangement along curves",
      status: "Shelved",
      path: "/bonify",
      features: ["Bones", "Tape", "Quaternions"],
      tech_stack: ["blender python"],
      domain: "Creative Tools",
      source_url: Some(github_url("bonify")),
      screenshots: [],
    ),
    ProjectInfo(
      name: "Mediata",
      emoji: "üé®",
      description: "Manages multimedia and posting with creative organizational workflows",
      status: "Waiting",
      path: "/mediata",
      features: [
        "Multimedia management", "Creative workflows", "Posting automation",
      ],
      tech_stack: ["Elixir"],
      domain: "Creative Tools",
      source_url: Some(github_url("mediata")),
      screenshots: [],
    ),
    // System Tools
    ProjectInfo(
      name: "varchiver",
      emoji: "üì¶",
      description: "Archives with skip patterns and gitconfig and aur releases",
      status: "Active",
      path: "/varchiver",
      features: ["Skip patterns", "Git integration", "AUR releases"],
      tech_stack: ["pyqt"],
      domain: "System Tools",
      source_url: Some(github_url("varchiver")),
      screenshots: [],
    ),
    ProjectInfo(
      name: "clipdirstructor",
      emoji: "üå≥",
      description: "Visual tree layouts converted into directories",
      status: "Active",
      path: "/clipdirstructor",
      features: ["Visual tree layouts", "Directory generation"],
      tech_stack: ["zig"],
      domain: "System Tools",
      source_url: Some(github_url("clipdirstructor")),
      screenshots: [],
    ),
    ProjectInfo(
      name: "Eepy Explorer",
      emoji: "üåô",
      description: "File explorer with sleep mode and power management",
      status: "Active",
      path: "/eepy-explorer",
      features: [
        "ease of use, e lang tool gui, background tasks, power-efficient indexing, file/archive previews, file/archive operations",
      ],
      tech_stack: ["pyqt"],
      domain: "System Tools",
      source_url: Some(github_url("eepy-explorer")),
      screenshots: [],
    ),
    ProjectInfo(
      name: "DeepScape",
      emoji: "üåå",
      description: "vast chartspace with specialized file/operations nodes and drawing",
      status: "Shelved",
      path: "/deepscape",
      features: [],
      tech_stack: ["Elixir first, pending remake"],
      domain: "Development Tools & Environments",
      source_url: Some(github_url("deepscape")),
      screenshots: [],
    ),
    ProjectInfo(
      name: "Glitters",
      emoji: "üìÖ",
      description: "My 3rd custom calendar",
      status: "Active",
      path: "/glitters",
      features: [
        "Multi-timezone meeting scheduling", "Working hours management",
        "Email notifications", "Custom week lengths", "Meeting coordination",
        "Moon phases and astrology",
      ],
      tech_stack: ["Gleam", "JavaScript"],
      domain: "Project Management",
      source_url: Some(github_url("glitters")),
      screenshots: [],
    ),
    // Language Tools
    ProjectInfo(
      name: "enzige",
      emoji: "‚ö°",
      description: "e lang tool",
      status: "Shelved",
      path: "/enzige",
      features: ["E language support", "Development tools"],
      tech_stack: ["zig"],
      domain: "Language Tools",
      source_url: Some(github_url("enzige")),
      screenshots: [],
    ),
    ProjectInfo(
      name: "translinator",
      emoji: "üåç",
      description: "Translation tool with rag context",
      status: "Shelved",
      path: "/translinator",
      features: ["RAG context", "Translation support"],
      tech_stack: ["Python"],
      domain: "Language Tools",
      source_url: Some(github_url("translinator")),
      screenshots: [],
    ),
    // Data & Search
    ProjectInfo(
      name: "Resolvinator",
      emoji: "üóÑÔ∏è",
      description: "Data backend and for data management",
      status: "Shelved",
      path: "/resolvinator",
      features: ["Data management", "Backend services"],
      tech_stack: ["Elixir"],
      domain: "Data & Search",
      source_url: Some(github_url("resolvinator")),
      screenshots: [],
    ),
    ProjectInfo(
      name: "seek",
      emoji: "üîé",
      description: "searching and indexing links and resources",
      status: "Active",
      path: "/seek",
      features: ["Resource indexing", "Link management"],
      tech_stack: ["Elixir"],
      domain: "Data & Search",
      source_url: Some(github_url("seek")),
      screenshots: [],
    ),
    // Project Management
    ProjectInfo(
      name: "TimeTracker",
      emoji: "‚è±Ô∏è",
      description: "Custom calenders and events, blocks, duration tracking and review",
      status: "Shelved",
      path: "/timetracker",
      features: ["Custom calendars", "Event tracking", "Duration tracking"],
      tech_stack: ["Elixir"],
      domain: "Project Management",
      source_url: Some(github_url("timetracker")),
      screenshots: [],
    ),
    // Business & Contracts
    ProjectInfo(
      name: "DivvyQueue",
      emoji: "üìä",
      description: "Corporeal-Incorporation agreement managment",
      status: "Shelved",
      path: "/divvyqueue",
      features: [
        "multiparty agreements with documents, and support",
        "timeline tracking, contact options, breach handling",
        "Smart contracts?", "Cross-discipline project tools",
      ],
      tech_stack: ["Gleam", "maybe E, zig"],
      domain: "Business & Contracts",
      source_url: Some(github_url("divvyqueue")),
      screenshots: [],
    ),
    ProjectInfo(
      name: "findry",
      emoji: "üé®",
      description: "Art/Resource Discovery",
      status: "Active",
      path: "/findry",
      features: [
        "Artist/Offerer Discovery", "Space/Equipment offerings and marketplace",
        "Interactive virtual space tour?", "Chat and availability system",
        "PostGIS-powered location search", "Integrated payment processing",
        "Smart access control", "Event Scheduling and organizing",
        "Brand-managed events",
      ],
      tech_stack: [
        "Gleam/Elixir on BEAM VM", "PostgreSQL with PostGIS",
        "WebSocket real-time", "ElecticSQL or Supabase or Squirrel idk",
      ],
      domain: "Creative Tools",
      source_url: Some(github_url("findry")),
      screenshots: [],
    ),
    ProjectInfo(
      name: "tandemx",
      emoji: "ü§ù",
      description: "partner situation browsership, shared inventory",
      status: "Active",
      path: "/tandemx",
      features: ["Partner management", "Shared inventory", "Resource tracking"],
      tech_stack: ["Gleam", "Elixir"],
      domain: "Business & Contracts",
      source_url: Some(github_url("tandemx")),
      screenshots: [],
    ),
  ]
}

pub fn get_projects_by_domain(domain: String) -> List(ProjectInfo) {
  get_projects()
  |> list.filter(fn(p) { p.domain == domain })
}
